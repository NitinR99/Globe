{"version":3,"sources":["logo.svg","components/Main.js","components/Documentation.js","App.js","reportWebVitals.js","index.js"],"names":["Main","globeEl","useRef","MAP_CENTER","lat","lng","altitude","useEffect","current","pointOfView","controls","autoRotate","autoRotateSpeed","ref","globeImageUrl","bumpImageUrl","backgroundColor","showAtmosphere","Documentation","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,4BCmCAA,EAjCF,WACX,IAAMC,EAAUC,mBACVC,EAAa,CAAEC,IAAK,QAASC,KAAM,OAASC,SAAU,GAc5D,OAPAC,qBAAU,WACRN,EAAQO,QAAQC,YAAYN,EAAY,GAGvCF,EAAQO,QAAQE,WAAWC,YAAa,EACxCV,EAAQO,QAAQE,WAAWE,gBAAkB,KAC5C,IAEF,cAAC,IAAD,CACAC,IAAKZ,EACLa,cAAc,uFACdC,aAAa,yDACbC,gBAAgB,UAChBC,gBAAgB,KCRLC,EAfO,WACpB,OACE,8BACE,8BACF,yDCeWC,MAff,WACE,OACE,cAAC,IAAD,UAGI,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWtB,IACtC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,iBAAiBC,UAAWJ,UCDzCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.edde0214.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,  { useEffect, useRef } from \"react\";\r\nimport Globe from 'react-globe.gl';\r\nconst Main = () => {\r\n  const globeEl = useRef();\r\n  const MAP_CENTER = { lat: 42.3043, lng: -83.0660, altitude: 2 }; //home\r\n  const gData = [{\r\n       lat: 42.3043,\r\n       lng: -83.0660,\r\n       size:  3,\r\n       color: \"green\"\r\n     }];\r\n  useEffect(() => {\r\n    globeEl.current.pointOfView(MAP_CENTER, 0);\r\n\r\n     // Auto-rotate\r\n     globeEl.current.controls().autoRotate = true;\r\n     globeEl.current.controls().autoRotateSpeed = 0.5;\r\n   }, []);\r\n  return (\r\n    <Globe\r\n    ref={globeEl}\r\n    globeImageUrl=\"//raw.githubusercontent.com/NitinR99/NitinR99.github.io/master/images/earthgreen.jpg\"\r\n    bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\r\n    backgroundColor=\"#001100\"\r\n    showAtmosphere={false}\r\n    //  backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\r\n    //  animateIn=\"true\"\r\n    //  pointsData={gData}\r\n  />\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\nexport default Main;\r\n//unpkg.com/three-globe/example/img/night-sky.png\r\n","import React from \"react\";\r\nconst Documentation = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n    <p>Documentation here.</p>\r\n\r\n</div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\nexport default Documentation;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Main from './components/Main';\nimport Documentation from './components/Documentation';\nfunction App() {\n  return (\n    <BrowserRouter>\n        {/* switch allows switching which components render.  */}\n\n        <Switch>\n          {/* route allows you to render by url path */}\n          <Route exact path=\"/globe\" component={Main} />\n          <Route exact path=\"/documentation\" component={Documentation}/>\n        </Switch>\n\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}